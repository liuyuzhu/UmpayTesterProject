package com.umpaytester.spayrest.test;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;

import net.sf.json.JSONObject;


/**
 * @author yuzhuliu:
 * @version ����ʱ�䣺2017��9��5�� ����10:12:31
 * ��˵��
 */
public class GetClientToken {

	public static final String ADD_URL ="http://10.10.178.106:8060/oauth2/client";
	public static final String SPAY_URL ="http://10.10.178.36:8071/spay_rest/oauth/authorize";
	public static String client_secret;
	public static String client_id;
	public static String token;
	

	public static void action() throws Throwable {

            URL url = new URL(ADD_URL);
            HttpURLConnection connection = (HttpURLConnection) url
                    .openConnection();
            connection.setDoOutput(true);
            connection.setDoInput(true);
            connection.setRequestMethod("POST");
            connection.setUseCaches(false);
            connection.setInstanceFollowRedirects(true);
            connection.setRequestProperty("Content-Type","application/json");

            connection.connect();

            DataOutputStream out = new DataOutputStream(connection.getOutputStream());
            JSONObject obj = new JSONObject();
            obj.element("scope", "default");
            obj.element("grant_type", "client_credentials");
            obj.element("created_by", "bit");
            obj.element("mer_id", "70510002");
            obj.element("modify_by", "bit");

            out.writeBytes(obj.toString());
            out.flush();
            out.close();


            //��ȡ��Ӧ
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    connection.getInputStream()));
            String lines;
            StringBuffer sb = new StringBuffer("");
            while ((lines = reader.readLine()) != null) {
                lines = new String(lines.getBytes(), "utf-8");
                sb.append(lines);
                System.out.println(sb);
                client_secret=sb.substring(18, sb.lastIndexOf("\",\"")).toString();
                client_id=sb.substring(73, sb.lastIndexOf("\"}")).toString();
            }
            
//            System.out.println(sb);
            System.out.println("client_secret:"+client_secret);
            System.out.println("client_id:"+client_id);
            reader.close();
            // �Ͽ�����
            connection.disconnect();
	}
         public static   String    getToke1( ) throws IOException{
        	 
                 //��ȡtoken
            
            URL spay_url = new URL(SPAY_URL);
            HttpURLConnection connection1 = (HttpURLConnection) spay_url.openConnection();
            connection1.setDoOutput(true);
            connection1.setDoInput(true);
            try {
				connection1.setRequestMethod("POST");
			} catch (ProtocolException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            connection1.setUseCaches(false);
            connection1.setInstanceFollowRedirects(true);
            connection1.setRequestProperty("Content-Type","application/json");

            try {
				connection1.connect();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

            //POST����
            DataOutputStream out1 = new DataOutputStream(
                    connection1.getOutputStream());
            JSONObject obj1 = new JSONObject();
            obj1.element("scope", "default");
            obj1.element("grant_type", "client_credentials");
            obj1.element("client_secret", "97a807a101ede5c14957770d0953a8017b28e815");
            obj1.element("mer_id", "70510000");
            obj1.element("client_id", "74a5945930aaefbfd89594f5bb89308cc52f594a");

            out1.writeBytes(obj1.toString());
            out1.flush();
            out1.close();


            //��ȡ��Ӧ
            BufferedReader reader1 = new BufferedReader(new InputStreamReader(
                    connection1.getInputStream()));
            String lines1;
            StringBuffer sb1 = new StringBuffer("");
            while ((lines1 = reader1.readLine()) != null) {
                lines1 = new String(lines1.getBytes(), "utf-8");
                sb1.append(lines1);
                System.out.println(sb1);
                token=sb1.substring(17, sb1.lastIndexOf("\"}")).toString();
//                client_id=sb1.substring(73, sb1.lastIndexOf("\"}")).toString();
            }
            
//            System.out.println(sb1);
            System.out.println("token:"+token);
//            System.out.println(client_id);
            reader1.close();
            // �Ͽ�����
            connection1.disconnect();
			return token;
            
            
            
            
            

}
	
	public static void main(String[] args) {
//		String client_secret;
//		String client_id;
		GetClientToken test = new GetClientToken();
		try {
//			action();
		test.getToke1();
		} catch (Throwable e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
